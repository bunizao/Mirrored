name: Extract plugin URLs & build sgmodule

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '5,30,55 * * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    services:
      docker:
        image: xream/script-hub:latest
        ports: [9100:9100, 9101:9101]

    env:
      MIRROR_RAW:  https://github.com/bunizao/Mirrored/raw/main/Chores/js
      MIRROR_KEY:  github.com/bunizao/Mirrored        # ÊéíÈô§Êù°‰ª∂

    steps:
      - uses: actions/checkout@v3

      - name: Setup git identity
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install curl jq netcat
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y curl jq netcat-openbsd

      - name: Wait for Script-Hub container (:9101)
        run: |
          for i in {1..20}; do
            nc -z localhost 9101 && exit 0
            sleep 5
          done
          echo "::error ::container not ready"; exit 1

      # ---------- 1. Êäì README Ëß£Êûê .plugin ----------
      - name: Download ProxyResource README
        run: |
          curl -s -o README.md https://raw.githubusercontent.com/luestr/ProxyResource/main/README.md

      - name: Extract .plugin URLs
        run: |
          grep -oP 'https?://[^ )"]+\?plugin=[^ )"]+' README.md > plugin_urls_raw.txt
          grep -oP '(?<=\?plugin=)[^ )"]+'           plugin_urls_raw.txt > plugin_urls.txt

      # ---------- 2. Ë∞É Script-Hub ÁîüÊàê .sgmodule ----------
      - name: Generate sgmodule files
        run: |
          mkdir -p Chores/sgmodule
          category="üö´ AD Block"
          enc_cat=$(echo "$category" | jq -sRr @uri)
          while read -r plugin_url; do
            [ -z "$plugin_url" ] && continue
            name=$(basename "$plugin_url" .plugin)
            enc=$(echo "$name" | jq -sRr @uri)
            url="http://localhost:9101/file/_start_/${plugin_url}/_end_/${enc}.sgmodule?type=loon-plugin&target=surge-module&category=$enc_cat"
            echo "‚Üì  $url"
            curl -Ls -A "Surge Mac/2985" "$url" -o "Chores/sgmodule/$name.sgmodule" \
              || echo "::warning ::Failed to download $name.sgmodule"
          done < plugin_urls.txt

      # ---------- 3. ÈïúÂÉèÂ§ñÈÉ® JS Âπ∂ÊõøÊç¢ÈìæÊé• ----------
      - name: Mirror external JS & rewrite links
        shell: bash
        run: |
          set -e
          mkdir -p Chores/js
          
          # Ê∑ªÂä†Ë∞ÉËØï‰ø°ÊÅØÔºöÂàóÂá∫ÁîüÊàêÁöÑ sgmodule Êñá‰ª∂
          echo "Generated sgmodule files:"
          ls -la Chores/sgmodule/ || echo "No sgmodule directory found"
          
          # ÊòæÁ§∫‰∏Ä‰∏™Á§∫‰æãÊñá‰ª∂ÁöÑÂÜÖÂÆπÔºàÁî®‰∫éË∞ÉËØïÔºâ
          if ls Chores/sgmodule/*.sgmodule >/dev/null 2>&1; then
            echo "Sample sgmodule content:"
            head -20 Chores/sgmodule/*.sgmodule | head -20
            echo "---"
          fi
          
          # ÊîπËøõÁöÑÊ≠£ÂàôË°®ËææÂºèÔºåÂåπÈÖçÊõ¥Â§öÂèØËÉΩÁöÑ JS URL Ê†ºÂºè
          echo "Searching for JS URLs..."
          
          # Â∞ùËØïÂ§öÁßç grep Ê®°Âºè
          {
            # ÂåπÈÖç script-path = https://...js
            grep -RohE 'script-path\s*=\s*https?://[^[:space:],"'\'']+\.js' Chores/sgmodule/ 2>/dev/null || true
            # ÂåπÈÖç http-response ‰∏≠ÁöÑ script-path
            grep -RohE 'http-response.*script-path=https?://[^[:space:],"'\'']+\.js' Chores/sgmodule/ 2>/dev/null || true
            # ÂåπÈÖç http-request ‰∏≠ÁöÑ script-path  
            grep -RohE 'http-request.*script-path=https?://[^[:space:],"'\'']+\.js' Chores/sgmodule/ 2>/dev/null || true
            # ÈÄöÁî®ÂåπÈÖçÔºå‰ªª‰Ωï https:// ÂºÄÂ§¥‰ª• .js ÁªìÂ∞æÁöÑ URL
            grep -RohE 'https?://[^[:space:],"'\'']*\.js[^[:space:],"'\'']*' Chores/sgmodule/ 2>/dev/null || true
          } | sort -u > all_js_urls.txt
          
          # ‰ªéÂÆåÊï¥ URL ‰∏≠ÊèêÂèñÁ∫Ø URLÔºàÂéªÊéâÂèÇÊï∞‰∏≠ÁöÑ script-path= Á≠âÂâçÁºÄÔºâ
          sed -E 's/.*script-path\s*=\s*//' all_js_urls.txt | \
          grep -E '^https?://' | \
          sort -u > external-js-raw.txt
          
          # ÊéíÈô§Â∑≤ÁªèÊåáÂêë Mirrored ÁöÑÈìæÊé•
          grep -v "$MIRROR_KEY" external-js-raw.txt | \
          grep -v "$MIRROR_RAW" > external-js.txt || true
          
          echo "All JS URLs found:"
          cat all_js_urls.txt || echo "No URLs in all_js_urls.txt"
          echo "---"
          echo "Raw external JS URLs:"
          cat external-js-raw.txt || echo "No URLs in external-js-raw.txt" 
          echo "---"
          echo "Filtered external JS URLs:"
          cat external-js.txt || echo "No URLs in external-js.txt"
          echo "---"

          if [ ! -s external-js.txt ]; then
            echo "No external JS links found."
            rm -f external-js.txt all_js_urls.txt external-js-raw.txt
            exit 0
          fi

          echo "Processing external JS files:"
          while read -r url; do
            [ -z "$url" ] && continue
            file=$(basename "$url")
            echo "Mirroring $url  ‚Üí  Chores/js/$file"
            if curl -Ls "$url" -o "Chores/js/$file"; then
              echo "Successfully downloaded $file"
              # ÊõøÊç¢ÊâÄÊúâ sgmodule Êñá‰ª∂‰∏≠ÁöÑÈìæÊé•
              find Chores/sgmodule -name "*.sgmodule" -exec sed -i "s|$url|$MIRROR_RAW/$file|g" {} \;
              echo "Updated links in sgmodule files"
            else
              echo "::warning ::Failed to download $url"
            fi
          done < external-js.txt
          
          # Ê∏ÖÁêÜ‰∏¥Êó∂Êñá‰ª∂
          rm -f external-js.txt all_js_urls.txt external-js-raw.txt

      - name: Commit & push (if changed)
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # ÊöÇÂ≠òÈúÄË¶ÅÁÆ°ÊéßÁöÑÊñá‰ª∂
          git add Chores/sgmodule Chores/js

          # Ëã•ÊöÇÂ≠òÂå∫‰∏∫Á©∫ ‚Üí Ê≠£Â∏∏ÈÄÄÂá∫
          if git diff --cached --quiet; then
            echo "Nothing to commit."
            exit 0
          fi

          git stash -u                 # ‰øùÂ≠òÂ∑•‰ΩúÂå∫Êú™Ë∑üË∏™Êñá‰ª∂
          git pull --rebase            # ÂêåÊ≠•ËøúÁ´Ø
          git stash pop || true        # ÂÜ≤Á™ÅÊó∂‰∏çËÆ©ËÑöÊú¨Â§±Ë¥•
          git add Chores/sgmodule Chores/js

          # rebase ÂêéÂÜçÊ¨°Ê£ÄÊü•
          if git diff --cached --quiet; then
            echo "Nothing to commit after rebase."
            exit 0
          fi

          git commit -m "Update sgmodule & mirror JS [skip ci]"
          git push
