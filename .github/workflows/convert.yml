name: Extract plugin URLs & build sgmodule

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '5,30,55 * * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    services:
      docker:
        image: xream/script-hub:latest
        ports: [9100:9100, 9101:9101]

    env:
      MIRROR_RAW:  https://github.com/bunizao/Mirrored/raw/main/Chores/js
      MIRROR_KEY:  github.com/bunizao/Mirrored        # ÊéíÈô§Êù°‰ª∂

    steps:
      - uses: actions/checkout@v3

      - name: Setup git identity
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install curl jq netcat
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y curl jq netcat-openbsd

      - name: Wait for Script-Hub container (:9101)
        run: |
          for i in {1..20}; do
            nc -z localhost 9101 && exit 0
            sleep 5
          done
          echo "::error ::container not ready"; exit 1

      # ---------- 1. Êäì README Ëß£Êûê .plugin ----------
      - name: Download ProxyResource README
        run: |
          curl -s -o README.md https://raw.githubusercontent.com/luestr/ProxyResource/main/README.md

      - name: Extract .plugin URLs
        run: |
          grep -oP 'https?://[^ )"]+\?plugin=[^ )"]+' README.md > plugin_urls_raw.txt
          grep -oP '(?<=\?plugin=)[^ )"]+'           plugin_urls_raw.txt > plugin_urls.txt

      # ---------- 2. Ë∞É Script-Hub ÁîüÊàê .sgmodule ----------
      - name: Generate sgmodule files
        run: |
          mkdir -p Chores/sgmodule
          category="üö´ AD Block"
          enc_cat=$(echo "$category" | jq -sRr @uri)
          while read -r plugin_url; do
            [ -z "$plugin_url" ] && continue
            name=$(basename "$plugin_url" .plugin)
            enc=$(echo "$name" | jq -sRr @uri)
            url="http://localhost:9101/file/_start_/${plugin_url}/_end_/${enc}.sgmodule?type=loon-plugin&target=surge-module&category=$enc_cat"
            echo "‚Üì  $url"
            curl -Ls -A "Surge Mac/2985" "$url" -o "Chores/sgmodule/$name.sgmodule" \
              || echo "::warning ::Failed to download $name.sgmodule"
          done < plugin_urls.txt

      # ---------- 3. ÈïúÂÉèÂ§ñÈÉ® JS Âπ∂ÊõøÊç¢ÈìæÊé• ----------
      - name: Mirror external JS & rewrite links
        shell: bash
        run: |
          set -e
          mkdir -p Chores/js
          # Êî∂ÈõÜÂ§ñÈìæ .jsÔºåÊéíÈô§Â∑≤ÁªèÊåáÂêë Mirrored ÁöÑ
          grep -RohE 'https?://[^"'\'' \t]+\.js' Chores/sgmodule \
            | grep -v "$MIRROR_KEY" \
            | grep -v "$MIRROR_RAW" \
            | sort -u > external-js.txt || true

          if [ ! -s external-js.txt ]; then
            echo "No external JS links found."
            rm -f external-js.txt
            exit 0
          fi

          cat external-js.txt
          while read -r url; do
            [ -z "$url" ] && continue
            file=$(basename "$url")
            echo "Mirroring $url  ‚Üí  Chores/js/$file"
            curl -Ls "$url" -o "Chores/js/$file"
            sed -i "s|$url|$MIRROR_RAW/$file|g" Chores/sgmodule/*.sgmodule
          done < external-js.txt
          rm -f external-js.txt

      # ---------- 4. Êèê‰∫§ ----------
      - name: Commit & push (if changed)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          set -e
          git add Chores/sgmodule Chores/js
          # Â∑•‰ΩúÂå∫Âπ≤ÂáÄ ‚Üí Áõ¥Êé•Ë∑≥Ëøá
          if [ -z "$(git status --porcelain)" ]; then
            echo "No changes to commit."
            exit 0
          fi

          git stash -u
          git pull --rebase
          git stash pop
          git add Chores/sgmodule Chores/js
          git commit -m "Update sgmodule & mirror JS [skip ci]"
          git push
          git add Chores/sgmodule Chores/js
          git commit -m "Update sgmodule & mirror JS [skip ci]"
          git push
