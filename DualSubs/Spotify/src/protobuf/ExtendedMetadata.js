// @generated by protobuf-ts 2.9.4 with parameter generate_dependencies,long_type_number,output_javascript
// @generated from protobuf file "ExtendedMetadata.proto" (package "com.spotify.extendedmetadata.proto", syntax proto3)
// tslint:disable
import { WireType } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Any } from "./google/protobuf/any";
/**
 * @generated from protobuf enum com.spotify.extendedmetadata.proto.ExtensionType
 */
export var ExtensionType;
(function (ExtensionType) {
    /**
     * @generated from protobuf enum value: UNKNOWN = 0;
     */
    ExtensionType[ExtensionType["UNKNOWN"] = 0] = "UNKNOWN";
    /**
     * @generated from protobuf enum value: GENERIC = 1;
     */
    ExtensionType[ExtensionType["GENERIC"] = 1] = "GENERIC";
    /**
     * @generated from protobuf enum value: ASSOC = 2;
     */
    ExtensionType[ExtensionType["ASSOC"] = 2] = "ASSOC";
})(ExtensionType || (ExtensionType = {}));
// message LocalExtensionQuery {
// ExtensionKind kind = 1;
// repeated a items = 2;
// }
// 
// message LocalBatchedExtensionResponse {
// repeated Extension items = 1;
// }
// 
// message Extension {
// ExtensionKind kind = 1;
// repeated EntityExtension entities = 2;
// }
// 
// message EntityExtension {
// String uri = 1;
// .google.protobuf.Any entity_data = 2;
// ExtensionHeader header = 3;
// }
// 
// message ExtensionHeader {
// bool cache_valid = 1;
// bool offline_valid = 2;
// int32 status_code = 3;
// bool empty = 4;
// int64 cache_expiry_ts = 5;
// int64 offline_expiry_ts = 6;
// }
/**
 * @generated from protobuf enum com.spotify.extendedmetadata.proto.ExtensionKind
 */
export var ExtensionKind;
(function (ExtensionKind) {
    /**
     * @generated from protobuf enum value: UNKNOWN_EXTENSION = 0;
     */
    ExtensionKind[ExtensionKind["UNKNOWN_EXTENSION"] = 0] = "UNKNOWN_EXTENSION";
    /**
     * @generated from protobuf enum value: CANVAZ = 1;
     */
    ExtensionKind[ExtensionKind["CANVAZ"] = 1] = "CANVAZ";
    /**
     * @generated from protobuf enum value: STORYLINES = 2;
     */
    ExtensionKind[ExtensionKind["STORYLINES"] = 2] = "STORYLINES";
    /**
     * @generated from protobuf enum value: PODCAST_TOPICS = 3;
     */
    ExtensionKind[ExtensionKind["PODCAST_TOPICS"] = 3] = "PODCAST_TOPICS";
    /**
     * @generated from protobuf enum value: PODCAST_SEGMENTS = 4;
     */
    ExtensionKind[ExtensionKind["PODCAST_SEGMENTS"] = 4] = "PODCAST_SEGMENTS";
    /**
     * @generated from protobuf enum value: AUDIO_FILES = 5;
     */
    ExtensionKind[ExtensionKind["AUDIO_FILES"] = 5] = "AUDIO_FILES";
    /**
     * @generated from protobuf enum value: TRACK_DESCRIPTOR = 6;
     */
    ExtensionKind[ExtensionKind["TRACK_DESCRIPTOR"] = 6] = "TRACK_DESCRIPTOR";
    /**
     * @generated from protobuf enum value: PODCAST_COUNTER = 7;
     */
    ExtensionKind[ExtensionKind["PODCAST_COUNTER"] = 7] = "PODCAST_COUNTER";
    /**
     * @generated from protobuf enum value: ARTIST_V4 = 8;
     */
    ExtensionKind[ExtensionKind["ARTIST_V4"] = 8] = "ARTIST_V4";
    /**
     * @generated from protobuf enum value: ALBUM_V4 = 9;
     */
    ExtensionKind[ExtensionKind["ALBUM_V4"] = 9] = "ALBUM_V4";
    /**
     * @generated from protobuf enum value: TRACK_V4 = 10;
     */
    ExtensionKind[ExtensionKind["TRACK_V4"] = 10] = "TRACK_V4";
    /**
     * @generated from protobuf enum value: SHOW_V4 = 11;
     */
    ExtensionKind[ExtensionKind["SHOW_V4"] = 11] = "SHOW_V4";
    /**
     * @generated from protobuf enum value: EPISODE_V4 = 12;
     */
    ExtensionKind[ExtensionKind["EPISODE_V4"] = 12] = "EPISODE_V4";
    /**
     * @generated from protobuf enum value: PODCAST_HTML_DESCRIPTION = 13;
     */
    ExtensionKind[ExtensionKind["PODCAST_HTML_DESCRIPTION"] = 13] = "PODCAST_HTML_DESCRIPTION";
    /**
     * @generated from protobuf enum value: PODCAST_QUOTES = 14;
     */
    ExtensionKind[ExtensionKind["PODCAST_QUOTES"] = 14] = "PODCAST_QUOTES";
    /**
     * @generated from protobuf enum value: USER_PROFILE = 15;
     */
    ExtensionKind[ExtensionKind["USER_PROFILE"] = 15] = "USER_PROFILE";
    /**
     * @generated from protobuf enum value: CANVAS_V1 = 16;
     */
    ExtensionKind[ExtensionKind["CANVAS_V1"] = 16] = "CANVAS_V1";
    /**
     * @generated from protobuf enum value: SHOW_V4_BASE = 17;
     */
    ExtensionKind[ExtensionKind["SHOW_V4_BASE"] = 17] = "SHOW_V4_BASE";
    /**
     * @generated from protobuf enum value: SHOW_V4_EPISODES_ASSOC = 18;
     */
    ExtensionKind[ExtensionKind["SHOW_V4_EPISODES_ASSOC"] = 18] = "SHOW_V4_EPISODES_ASSOC";
    /**
     * @generated from protobuf enum value: TRACK_DESCRIPTOR_SIGNATURES = 19;
     */
    ExtensionKind[ExtensionKind["TRACK_DESCRIPTOR_SIGNATURES"] = 19] = "TRACK_DESCRIPTOR_SIGNATURES";
    /**
     * @generated from protobuf enum value: PODCAST_AD_SEGMENTS = 20;
     */
    ExtensionKind[ExtensionKind["PODCAST_AD_SEGMENTS"] = 20] = "PODCAST_AD_SEGMENTS";
    /**
     * @generated from protobuf enum value: EPISODE_TRANSCRIPTS = 21;
     */
    ExtensionKind[ExtensionKind["EPISODE_TRANSCRIPTS"] = 21] = "EPISODE_TRANSCRIPTS";
    /**
     * @generated from protobuf enum value: PODCAST_SUBSCRIPTIONS = 22;
     */
    ExtensionKind[ExtensionKind["PODCAST_SUBSCRIPTIONS"] = 22] = "PODCAST_SUBSCRIPTIONS";
    /**
     * @generated from protobuf enum value: EXTRACTED_COLOR = 23;
     */
    ExtensionKind[ExtensionKind["EXTRACTED_COLOR"] = 23] = "EXTRACTED_COLOR";
    /**
     * @generated from protobuf enum value: PODCAST_VIRALITY = 24;
     */
    ExtensionKind[ExtensionKind["PODCAST_VIRALITY"] = 24] = "PODCAST_VIRALITY";
    /**
     * @generated from protobuf enum value: IMAGE_SPARKLES_HACK = 25;
     */
    ExtensionKind[ExtensionKind["IMAGE_SPARKLES_HACK"] = 25] = "IMAGE_SPARKLES_HACK";
    /**
     * @generated from protobuf enum value: PODCAST_POPULARITY_HACK = 26;
     */
    ExtensionKind[ExtensionKind["PODCAST_POPULARITY_HACK"] = 26] = "PODCAST_POPULARITY_HACK";
    /**
     * @generated from protobuf enum value: AUTOMIX_MODE = 27;
     */
    ExtensionKind[ExtensionKind["AUTOMIX_MODE"] = 27] = "AUTOMIX_MODE";
    /**
     * @generated from protobuf enum value: CUEPOINTS = 28;
     */
    ExtensionKind[ExtensionKind["CUEPOINTS"] = 28] = "CUEPOINTS";
    /**
     * @generated from protobuf enum value: PODCAST_POLL = 29;
     */
    ExtensionKind[ExtensionKind["PODCAST_POLL"] = 29] = "PODCAST_POLL";
    /**
     * @generated from protobuf enum value: EPISODE_ACCESS = 30;
     */
    ExtensionKind[ExtensionKind["EPISODE_ACCESS"] = 30] = "EPISODE_ACCESS";
    /**
     * @generated from protobuf enum value: SHOW_ACCESS = 31;
     */
    ExtensionKind[ExtensionKind["SHOW_ACCESS"] = 31] = "SHOW_ACCESS";
    /**
     * @generated from protobuf enum value: PODCAST_QNA = 32;
     */
    ExtensionKind[ExtensionKind["PODCAST_QNA"] = 32] = "PODCAST_QNA";
    /**
     * @generated from protobuf enum value: CLIPS = 33;
     */
    ExtensionKind[ExtensionKind["CLIPS"] = 33] = "CLIPS";
    /**
     * @generated from protobuf enum value: SHOW_V5 = 34;
     */
    ExtensionKind[ExtensionKind["SHOW_V5"] = 34] = "SHOW_V5";
    /**
     * @generated from protobuf enum value: EPISODE_V5 = 35;
     */
    ExtensionKind[ExtensionKind["EPISODE_V5"] = 35] = "EPISODE_V5";
    /**
     * @generated from protobuf enum value: PODCAST_CTA_CARDS = 36;
     */
    ExtensionKind[ExtensionKind["PODCAST_CTA_CARDS"] = 36] = "PODCAST_CTA_CARDS";
    /**
     * @generated from protobuf enum value: PODCAST_RATING = 37;
     */
    ExtensionKind[ExtensionKind["PODCAST_RATING"] = 37] = "PODCAST_RATING";
    /**
     * @generated from protobuf enum value: DISPLAY_SEGMENTS = 38;
     */
    ExtensionKind[ExtensionKind["DISPLAY_SEGMENTS"] = 38] = "DISPLAY_SEGMENTS";
    /**
     * @generated from protobuf enum value: GREENROOM = 39;
     */
    ExtensionKind[ExtensionKind["GREENROOM"] = 39] = "GREENROOM";
    /**
     * @generated from protobuf enum value: USER_CREATED = 40;
     */
    ExtensionKind[ExtensionKind["USER_CREATED"] = 40] = "USER_CREATED";
    /**
     * @generated from protobuf enum value: SHOW_DESCRIPTION = 41;
     */
    ExtensionKind[ExtensionKind["SHOW_DESCRIPTION"] = 41] = "SHOW_DESCRIPTION";
    /**
     * @generated from protobuf enum value: SHOW_HTML_DESCRIPTION = 42;
     */
    ExtensionKind[ExtensionKind["SHOW_HTML_DESCRIPTION"] = 42] = "SHOW_HTML_DESCRIPTION";
    /**
     * @generated from protobuf enum value: SHOW_PLAYABILITY = 43;
     */
    ExtensionKind[ExtensionKind["SHOW_PLAYABILITY"] = 43] = "SHOW_PLAYABILITY";
    /**
     * @generated from protobuf enum value: EPISODE_DESCRIPTION = 44;
     */
    ExtensionKind[ExtensionKind["EPISODE_DESCRIPTION"] = 44] = "EPISODE_DESCRIPTION";
    /**
     * @generated from protobuf enum value: EPISODE_HTML_DESCRIPTION = 45;
     */
    ExtensionKind[ExtensionKind["EPISODE_HTML_DESCRIPTION"] = 45] = "EPISODE_HTML_DESCRIPTION";
    /**
     * @generated from protobuf enum value: EPISODE_PLAYABILITY = 46;
     */
    ExtensionKind[ExtensionKind["EPISODE_PLAYABILITY"] = 46] = "EPISODE_PLAYABILITY";
    /**
     * @generated from protobuf enum value: SHOW_EPISODES_ASSOC = 47;
     */
    ExtensionKind[ExtensionKind["SHOW_EPISODES_ASSOC"] = 47] = "SHOW_EPISODES_ASSOC";
    /**
     * @generated from protobuf enum value: CLIENT_CONFIG = 48;
     */
    ExtensionKind[ExtensionKind["CLIENT_CONFIG"] = 48] = "CLIENT_CONFIG";
    /**
     * @generated from protobuf enum value: PLAYLISTABILITY = 49;
     */
    ExtensionKind[ExtensionKind["PLAYLISTABILITY"] = 49] = "PLAYLISTABILITY";
    /**
     * @generated from protobuf enum value: AUDIOBOOK_V5 = 50;
     */
    ExtensionKind[ExtensionKind["AUDIOBOOK_V5"] = 50] = "AUDIOBOOK_V5";
    /**
     * @generated from protobuf enum value: CHAPTER_V5 = 51;
     */
    ExtensionKind[ExtensionKind["CHAPTER_V5"] = 51] = "CHAPTER_V5";
    /**
     * @generated from protobuf enum value: AUDIOBOOK_SPECIFICS = 52;
     */
    ExtensionKind[ExtensionKind["AUDIOBOOK_SPECIFICS"] = 52] = "AUDIOBOOK_SPECIFICS";
    /**
     * @generated from protobuf enum value: EPISODE_RANKING = 53;
     */
    ExtensionKind[ExtensionKind["EPISODE_RANKING"] = 53] = "EPISODE_RANKING";
    /**
     * @generated from protobuf enum value: HTML_DESCRIPTION = 54;
     */
    ExtensionKind[ExtensionKind["HTML_DESCRIPTION"] = 54] = "HTML_DESCRIPTION";
    /**
     * @generated from protobuf enum value: CREATOR_CHANNEL = 55;
     */
    ExtensionKind[ExtensionKind["CREATOR_CHANNEL"] = 55] = "CREATOR_CHANNEL";
    /**
     * @generated from protobuf enum value: AUDIOBOOK_PROVIDERS = 56;
     */
    ExtensionKind[ExtensionKind["AUDIOBOOK_PROVIDERS"] = 56] = "AUDIOBOOK_PROVIDERS";
    /**
     * @generated from protobuf enum value: PLAY_TRAIT = 57;
     */
    ExtensionKind[ExtensionKind["PLAY_TRAIT"] = 57] = "PLAY_TRAIT";
    /**
     * @generated from protobuf enum value: CONTENT_WARNING = 58;
     */
    ExtensionKind[ExtensionKind["CONTENT_WARNING"] = 58] = "CONTENT_WARNING";
    /**
     * @generated from protobuf enum value: IMAGE_CUE = 59;
     */
    ExtensionKind[ExtensionKind["IMAGE_CUE"] = 59] = "IMAGE_CUE";
    /**
     * @generated from protobuf enum value: STREAM_COUNT = 60;
     */
    ExtensionKind[ExtensionKind["STREAM_COUNT"] = 60] = "STREAM_COUNT";
    /**
     * @generated from protobuf enum value: AUDIO_ATTRIBUTES = 61;
     */
    ExtensionKind[ExtensionKind["AUDIO_ATTRIBUTES"] = 61] = "AUDIO_ATTRIBUTES";
    /**
     * @generated from protobuf enum value: NAVIGABLE_TRAIT = 62;
     */
    ExtensionKind[ExtensionKind["NAVIGABLE_TRAIT"] = 62] = "NAVIGABLE_TRAIT";
    /**
     * @generated from protobuf enum value: NEXT_BEST_EPISODE = 63;
     */
    ExtensionKind[ExtensionKind["NEXT_BEST_EPISODE"] = 63] = "NEXT_BEST_EPISODE";
    /**
     * @generated from protobuf enum value: AUDIOBOOK_PRICE = 64;
     */
    ExtensionKind[ExtensionKind["AUDIOBOOK_PRICE"] = 64] = "AUDIOBOOK_PRICE";
    /**
     * @generated from protobuf enum value: EXPRESSIVE_PLAYLISTS = 65;
     */
    ExtensionKind[ExtensionKind["EXPRESSIVE_PLAYLISTS"] = 65] = "EXPRESSIVE_PLAYLISTS";
    /**
     * @generated from protobuf enum value: DYNAMIC_SHOW_EPISODE = 66;
     */
    ExtensionKind[ExtensionKind["DYNAMIC_SHOW_EPISODE"] = 66] = "DYNAMIC_SHOW_EPISODE";
    /**
     * @generated from protobuf enum value: LIVE = 67;
     */
    ExtensionKind[ExtensionKind["LIVE"] = 67] = "LIVE";
    /**
     * @generated from protobuf enum value: SKIP_PLAYED = 68;
     */
    ExtensionKind[ExtensionKind["SKIP_PLAYED"] = 68] = "SKIP_PLAYED";
    /**
     * @generated from protobuf enum value: AD_BREAK_FREE_PODCASTS = 69;
     */
    ExtensionKind[ExtensionKind["AD_BREAK_FREE_PODCASTS"] = 69] = "AD_BREAK_FREE_PODCASTS";
    /**
     * @generated from protobuf enum value: ASSOCIATIONS = 70;
     */
    ExtensionKind[ExtensionKind["ASSOCIATIONS"] = 70] = "ASSOCIATIONS";
    /**
     * @generated from protobuf enum value: PLAYLIST_EVALUATION = 71;
     */
    ExtensionKind[ExtensionKind["PLAYLIST_EVALUATION"] = 71] = "PLAYLIST_EVALUATION";
    /**
     * @generated from protobuf enum value: CACHE_INVALIDATIONS = 72;
     */
    ExtensionKind[ExtensionKind["CACHE_INVALIDATIONS"] = 72] = "CACHE_INVALIDATIONS";
    /**
     * @generated from protobuf enum value: LIVESTREAM_ENTITY = 73;
     */
    ExtensionKind[ExtensionKind["LIVESTREAM_ENTITY"] = 73] = "LIVESTREAM_ENTITY";
    /**
     * @generated from protobuf enum value: SINGLE_TAP_REACTIONS = 74;
     */
    ExtensionKind[ExtensionKind["SINGLE_TAP_REACTIONS"] = 74] = "SINGLE_TAP_REACTIONS";
    /**
     * @generated from protobuf enum value: USER_COMMENTS = 75;
     */
    ExtensionKind[ExtensionKind["USER_COMMENTS"] = 75] = "USER_COMMENTS";
    /**
     * @generated from protobuf enum value: CLIENT_RESTRICTIONS = 76;
     */
    ExtensionKind[ExtensionKind["CLIENT_RESTRICTIONS"] = 76] = "CLIENT_RESTRICTIONS";
    /**
     * @generated from protobuf enum value: PODCAST_GUEST = 77;
     */
    ExtensionKind[ExtensionKind["PODCAST_GUEST"] = 77] = "PODCAST_GUEST";
    /**
     * @generated from protobuf enum value: PLAYABILITY = 78;
     */
    ExtensionKind[ExtensionKind["PLAYABILITY"] = 78] = "PLAYABILITY";
    /**
     * @generated from protobuf enum value: COVER_IMAGE = 79;
     */
    ExtensionKind[ExtensionKind["COVER_IMAGE"] = 79] = "COVER_IMAGE";
    /**
     * @generated from protobuf enum value: SHARE_TRAIT = 80;
     */
    ExtensionKind[ExtensionKind["SHARE_TRAIT"] = 80] = "SHARE_TRAIT";
    /**
     * @generated from protobuf enum value: INSTANCE_SHARING = 81;
     */
    ExtensionKind[ExtensionKind["INSTANCE_SHARING"] = 81] = "INSTANCE_SHARING";
    /**
     * @generated from protobuf enum value: ARTIST_TOUR = 82;
     */
    ExtensionKind[ExtensionKind["ARTIST_TOUR"] = 82] = "ARTIST_TOUR";
    /**
     * @generated from protobuf enum value: AUDIOBOOK_GENRE = 83;
     */
    ExtensionKind[ExtensionKind["AUDIOBOOK_GENRE"] = 83] = "AUDIOBOOK_GENRE";
    /**
     * @generated from protobuf enum value: CONCEPT = 84;
     */
    ExtensionKind[ExtensionKind["CONCEPT"] = 84] = "CONCEPT";
    /**
     * @generated from protobuf enum value: ORIGINAL_VIDEO = 85;
     */
    ExtensionKind[ExtensionKind["ORIGINAL_VIDEO"] = 85] = "ORIGINAL_VIDEO";
    /**
     * @generated from protobuf enum value: SMART_SHUFFLE = 86;
     */
    ExtensionKind[ExtensionKind["SMART_SHUFFLE"] = 86] = "SMART_SHUFFLE";
    /**
     * @generated from protobuf enum value: LIVE_EVENTS = 87;
     */
    ExtensionKind[ExtensionKind["LIVE_EVENTS"] = 87] = "LIVE_EVENTS";
    /**
     * @generated from protobuf enum value: AUDIOBOOK_RELATIONS = 88;
     */
    ExtensionKind[ExtensionKind["AUDIOBOOK_RELATIONS"] = 88] = "AUDIOBOOK_RELATIONS";
    /**
     * @generated from protobuf enum value: HOME_POC_BASECARD = 89;
     */
    ExtensionKind[ExtensionKind["HOME_POC_BASECARD"] = 89] = "HOME_POC_BASECARD";
    /**
     * @generated from protobuf enum value: AUDIOBOOK_SUPPLEMENTS = 90;
     */
    ExtensionKind[ExtensionKind["AUDIOBOOK_SUPPLEMENTS"] = 90] = "AUDIOBOOK_SUPPLEMENTS";
    /**
     * @generated from protobuf enum value: PAID_PODCAST_BANNER = 91;
     */
    ExtensionKind[ExtensionKind["PAID_PODCAST_BANNER"] = 91] = "PAID_PODCAST_BANNER";
    /**
     * @generated from protobuf enum value: FEWER_ADS = 92;
     */
    ExtensionKind[ExtensionKind["FEWER_ADS"] = 92] = "FEWER_ADS";
    /**
     * @generated from protobuf enum value: WATCH_FEED_SHOW_EXPLORER = 93;
     */
    ExtensionKind[ExtensionKind["WATCH_FEED_SHOW_EXPLORER"] = 93] = "WATCH_FEED_SHOW_EXPLORER";
    /**
     * @generated from protobuf enum value: TRACK_EXTRA_DESCRIPTORS = 94;
     */
    ExtensionKind[ExtensionKind["TRACK_EXTRA_DESCRIPTORS"] = 94] = "TRACK_EXTRA_DESCRIPTORS";
    /**
     * @generated from protobuf enum value: TRACK_EXTRA_AUDIO_ATTRIBUTES = 95;
     */
    ExtensionKind[ExtensionKind["TRACK_EXTRA_AUDIO_ATTRIBUTES"] = 95] = "TRACK_EXTRA_AUDIO_ATTRIBUTES";
    /**
     * @generated from protobuf enum value: TRACK_EXTENDED_CREDITS = 96;
     */
    ExtensionKind[ExtensionKind["TRACK_EXTENDED_CREDITS"] = 96] = "TRACK_EXTENDED_CREDITS";
    /**
     * @generated from protobuf enum value: SIMPLE_TRAIT = 97;
     */
    ExtensionKind[ExtensionKind["SIMPLE_TRAIT"] = 97] = "SIMPLE_TRAIT";
    /**
     * @generated from protobuf enum value: AUDIO_ASSOCIATIONS = 98;
     */
    ExtensionKind[ExtensionKind["AUDIO_ASSOCIATIONS"] = 98] = "AUDIO_ASSOCIATIONS";
    /**
     * @generated from protobuf enum value: VIDEO_ASSOCIATIONS = 99;
     */
    ExtensionKind[ExtensionKind["VIDEO_ASSOCIATIONS"] = 99] = "VIDEO_ASSOCIATIONS";
    /**
     * @generated from protobuf enum value: PLAYLIST_TUNER = 100;
     */
    ExtensionKind[ExtensionKind["PLAYLIST_TUNER"] = 100] = "PLAYLIST_TUNER";
    /**
     * @generated from protobuf enum value: ARTIST_VIDEOS_ENTRYPOINT = 101;
     */
    ExtensionKind[ExtensionKind["ARTIST_VIDEOS_ENTRYPOINT"] = 101] = "ARTIST_VIDEOS_ENTRYPOINT";
    /**
     * @generated from protobuf enum value: PRERELEASE = 102;
     */
    ExtensionKind[ExtensionKind["PRERELEASE"] = 102] = "PRERELEASE";
    /**
     * @generated from protobuf enum value: CONTENT_ALTERNATIVES = 103;
     */
    ExtensionKind[ExtensionKind["CONTENT_ALTERNATIVES"] = 103] = "CONTENT_ALTERNATIVES";
    /**
     * @generated from protobuf enum value: SNAPSHOT_SHARING = 105;
     */
    ExtensionKind[ExtensionKind["SNAPSHOT_SHARING"] = 105] = "SNAPSHOT_SHARING";
})(ExtensionKind || (ExtensionKind = {}));
// @generated message type with reflection information, may provide speed optimized methods
class BatchedEntityRequest$Type extends MessageType {
    constructor() {
        super("com.spotify.extendedmetadata.proto.BatchedEntityRequest", [
            { no: 1, name: "header", kind: "message", T: () => BatchedEntityRequestHeader },
            { no: 2, name: "request", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => EntityRequest }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.request = [];
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* com.spotify.extendedmetadata.proto.BatchedEntityRequestHeader header */ 1:
                    message.header = BatchedEntityRequestHeader.internalBinaryRead(reader, reader.uint32(), options, message.header);
                    break;
                case /* repeated com.spotify.extendedmetadata.proto.EntityRequest request */ 2:
                    message.request.push(EntityRequest.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* com.spotify.extendedmetadata.proto.BatchedEntityRequestHeader header = 1; */
        if (message.header)
            BatchedEntityRequestHeader.internalBinaryWrite(message.header, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated com.spotify.extendedmetadata.proto.EntityRequest request = 2; */
        for (let i = 0; i < message.request.length; i++)
            EntityRequest.internalBinaryWrite(message.request[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.spotify.extendedmetadata.proto.BatchedEntityRequest
 */
export const BatchedEntityRequest = new BatchedEntityRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BatchedEntityRequestHeader$Type extends MessageType {
    constructor() {
        super("com.spotify.extendedmetadata.proto.BatchedEntityRequestHeader", [
            { no: 1, name: "country", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "catalogue", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "task_id", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.country = "";
        message.catalogue = "";
        message.taskId = new Uint8Array(0);
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string country */ 1:
                    message.country = reader.string();
                    break;
                case /* string catalogue */ 2:
                    message.catalogue = reader.string();
                    break;
                case /* bytes task_id */ 3:
                    message.taskId = reader.bytes();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string country = 1; */
        if (message.country !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.country);
        /* string catalogue = 2; */
        if (message.catalogue !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.catalogue);
        /* bytes task_id = 3; */
        if (message.taskId.length)
            writer.tag(3, WireType.LengthDelimited).bytes(message.taskId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.spotify.extendedmetadata.proto.BatchedEntityRequestHeader
 */
export const BatchedEntityRequestHeader = new BatchedEntityRequestHeader$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EntityRequest$Type extends MessageType {
    constructor() {
        super("com.spotify.extendedmetadata.proto.EntityRequest", [
            { no: 1, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "query", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ExtensionQuery }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.uri = "";
        message.query = [];
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string uri */ 1:
                    message.uri = reader.string();
                    break;
                case /* repeated com.spotify.extendedmetadata.proto.ExtensionQuery query */ 2:
                    message.query.push(ExtensionQuery.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string uri = 1; */
        if (message.uri !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.uri);
        /* repeated com.spotify.extendedmetadata.proto.ExtensionQuery query = 2; */
        for (let i = 0; i < message.query.length; i++)
            ExtensionQuery.internalBinaryWrite(message.query[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.spotify.extendedmetadata.proto.EntityRequest
 */
export const EntityRequest = new EntityRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExtensionQuery$Type extends MessageType {
    constructor() {
        super("com.spotify.extendedmetadata.proto.ExtensionQuery", [
            { no: 1, name: "kind", kind: "enum", T: () => ["com.spotify.extendedmetadata.proto.ExtensionKind", ExtensionKind] },
            { no: 2, name: "etag", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.kind = 0;
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* com.spotify.extendedmetadata.proto.ExtensionKind kind */ 1:
                    message.kind = reader.int32();
                    break;
                case /* optional string etag */ 2:
                    message.etag = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* com.spotify.extendedmetadata.proto.ExtensionKind kind = 1; */
        if (message.kind !== 0)
            writer.tag(1, WireType.Varint).int32(message.kind);
        /* optional string etag = 2; */
        if (message.etag !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.etag);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.spotify.extendedmetadata.proto.ExtensionQuery
 */
export const ExtensionQuery = new ExtensionQuery$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BatchedExtensionResponse$Type extends MessageType {
    constructor() {
        super("com.spotify.extendedmetadata.proto.BatchedExtensionResponse", [
            { no: 1, name: "header", kind: "message", T: () => BatchedExtensionResponseHeader },
            { no: 2, name: "extended_metadata", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => EntityExtensionDataArray }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.extendedMetadata = [];
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* com.spotify.extendedmetadata.proto.BatchedExtensionResponseHeader header */ 1:
                    message.header = BatchedExtensionResponseHeader.internalBinaryRead(reader, reader.uint32(), options, message.header);
                    break;
                case /* repeated com.spotify.extendedmetadata.proto.EntityExtensionDataArray extended_metadata */ 2:
                    message.extendedMetadata.push(EntityExtensionDataArray.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* com.spotify.extendedmetadata.proto.BatchedExtensionResponseHeader header = 1; */
        if (message.header)
            BatchedExtensionResponseHeader.internalBinaryWrite(message.header, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated com.spotify.extendedmetadata.proto.EntityExtensionDataArray extended_metadata = 2; */
        for (let i = 0; i < message.extendedMetadata.length; i++)
            EntityExtensionDataArray.internalBinaryWrite(message.extendedMetadata[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.spotify.extendedmetadata.proto.BatchedExtensionResponse
 */
export const BatchedExtensionResponse = new BatchedExtensionResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BatchedExtensionResponseHeader$Type extends MessageType {
    constructor() {
        super("com.spotify.extendedmetadata.proto.BatchedExtensionResponseHeader", []);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.spotify.extendedmetadata.proto.BatchedExtensionResponseHeader
 */
export const BatchedExtensionResponseHeader = new BatchedExtensionResponseHeader$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EntityExtensionDataArray$Type extends MessageType {
    constructor() {
        super("com.spotify.extendedmetadata.proto.EntityExtensionDataArray", [
            { no: 1, name: "header", kind: "message", T: () => EntityExtensionDataArrayHeader },
            { no: 2, name: "kind", kind: "enum", T: () => ["com.spotify.extendedmetadata.proto.ExtensionKind", ExtensionKind] },
            { no: 3, name: "extension_data", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => EntityExtensionData }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.kind = 0;
        message.extensionData = [];
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* com.spotify.extendedmetadata.proto.EntityExtensionDataArrayHeader header */ 1:
                    message.header = EntityExtensionDataArrayHeader.internalBinaryRead(reader, reader.uint32(), options, message.header);
                    break;
                case /* com.spotify.extendedmetadata.proto.ExtensionKind kind */ 2:
                    message.kind = reader.int32();
                    break;
                case /* repeated com.spotify.extendedmetadata.proto.EntityExtensionData extension_data */ 3:
                    message.extensionData.push(EntityExtensionData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* com.spotify.extendedmetadata.proto.EntityExtensionDataArrayHeader header = 1; */
        if (message.header)
            EntityExtensionDataArrayHeader.internalBinaryWrite(message.header, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* com.spotify.extendedmetadata.proto.ExtensionKind kind = 2; */
        if (message.kind !== 0)
            writer.tag(2, WireType.Varint).int32(message.kind);
        /* repeated com.spotify.extendedmetadata.proto.EntityExtensionData extension_data = 3; */
        for (let i = 0; i < message.extensionData.length; i++)
            EntityExtensionData.internalBinaryWrite(message.extensionData[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.spotify.extendedmetadata.proto.EntityExtensionDataArray
 */
export const EntityExtensionDataArray = new EntityExtensionDataArray$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EntityExtensionDataArrayHeader$Type extends MessageType {
    constructor() {
        super("com.spotify.extendedmetadata.proto.EntityExtensionDataArrayHeader", [
            { no: 1, name: "provider_error_status", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "cache_ttl_in_seconds", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "offline_ttl_in_seconds", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 4, name: "extension_type", kind: "enum", T: () => ["com.spotify.extendedmetadata.proto.ExtensionType", ExtensionType] }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.providerErrorStatus = 0;
        message.cacheTtlInSeconds = 0;
        message.offlineTtlInSeconds = 0;
        message.extensionType = 0;
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 provider_error_status */ 1:
                    message.providerErrorStatus = reader.int32();
                    break;
                case /* int64 cache_ttl_in_seconds */ 2:
                    message.cacheTtlInSeconds = reader.int64().toNumber();
                    break;
                case /* int64 offline_ttl_in_seconds */ 3:
                    message.offlineTtlInSeconds = reader.int64().toNumber();
                    break;
                case /* com.spotify.extendedmetadata.proto.ExtensionType extension_type */ 4:
                    message.extensionType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 provider_error_status = 1; */
        if (message.providerErrorStatus !== 0)
            writer.tag(1, WireType.Varint).int32(message.providerErrorStatus);
        /* int64 cache_ttl_in_seconds = 2; */
        if (message.cacheTtlInSeconds !== 0)
            writer.tag(2, WireType.Varint).int64(message.cacheTtlInSeconds);
        /* int64 offline_ttl_in_seconds = 3; */
        if (message.offlineTtlInSeconds !== 0)
            writer.tag(3, WireType.Varint).int64(message.offlineTtlInSeconds);
        /* com.spotify.extendedmetadata.proto.ExtensionType extension_type = 4; */
        if (message.extensionType !== 0)
            writer.tag(4, WireType.Varint).int32(message.extensionType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.spotify.extendedmetadata.proto.EntityExtensionDataArrayHeader
 */
export const EntityExtensionDataArrayHeader = new EntityExtensionDataArrayHeader$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EntityExtensionData$Type extends MessageType {
    constructor() {
        super("com.spotify.extendedmetadata.proto.EntityExtensionData", [
            { no: 1, name: "header", kind: "message", T: () => EntityExtensionDataHeader },
            { no: 2, name: "entity_uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "extension_data", kind: "message", T: () => Any }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.entityUri = "";
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* com.spotify.extendedmetadata.proto.EntityExtensionDataHeader header */ 1:
                    message.header = EntityExtensionDataHeader.internalBinaryRead(reader, reader.uint32(), options, message.header);
                    break;
                case /* string entity_uri */ 2:
                    message.entityUri = reader.string();
                    break;
                case /* google.protobuf.Any extension_data */ 3:
                    message.extensionData = Any.internalBinaryRead(reader, reader.uint32(), options, message.extensionData);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* com.spotify.extendedmetadata.proto.EntityExtensionDataHeader header = 1; */
        if (message.header)
            EntityExtensionDataHeader.internalBinaryWrite(message.header, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string entity_uri = 2; */
        if (message.entityUri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.entityUri);
        /* google.protobuf.Any extension_data = 3; */
        if (message.extensionData)
            Any.internalBinaryWrite(message.extensionData, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.spotify.extendedmetadata.proto.EntityExtensionData
 */
export const EntityExtensionData = new EntityExtensionData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EntityExtensionDataHeader$Type extends MessageType {
    constructor() {
        super("com.spotify.extendedmetadata.proto.EntityExtensionDataHeader", [
            { no: 1, name: "status_code", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "etag", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "locale", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "cache_ttl_in_seconds", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 5, name: "offline_ttl_in_seconds", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.statusCode = 0;
        message.etag = "";
        message.locale = "";
        message.cacheTtlInSeconds = 0;
        message.offlineTtlInSeconds = 0;
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 status_code */ 1:
                    message.statusCode = reader.int32();
                    break;
                case /* string etag */ 2:
                    message.etag = reader.string();
                    break;
                case /* string locale */ 3:
                    message.locale = reader.string();
                    break;
                case /* int64 cache_ttl_in_seconds */ 4:
                    message.cacheTtlInSeconds = reader.int64().toNumber();
                    break;
                case /* int64 offline_ttl_in_seconds */ 5:
                    message.offlineTtlInSeconds = reader.int64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 status_code = 1; */
        if (message.statusCode !== 0)
            writer.tag(1, WireType.Varint).int32(message.statusCode);
        /* string etag = 2; */
        if (message.etag !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.etag);
        /* string locale = 3; */
        if (message.locale !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.locale);
        /* int64 cache_ttl_in_seconds = 4; */
        if (message.cacheTtlInSeconds !== 0)
            writer.tag(4, WireType.Varint).int64(message.cacheTtlInSeconds);
        /* int64 offline_ttl_in_seconds = 5; */
        if (message.offlineTtlInSeconds !== 0)
            writer.tag(5, WireType.Varint).int64(message.offlineTtlInSeconds);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.spotify.extendedmetadata.proto.EntityExtensionDataHeader
 */
export const EntityExtensionDataHeader = new EntityExtensionDataHeader$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlainListAssoc$Type extends MessageType {
    constructor() {
        super("com.spotify.extendedmetadata.proto.PlainListAssoc", [
            { no: 1, name: "entity_uri", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.entityUri = [];
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string entity_uri */ 1:
                    message.entityUri.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string entity_uri = 1; */
        for (let i = 0; i < message.entityUri.length; i++)
            writer.tag(1, WireType.LengthDelimited).string(message.entityUri[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.spotify.extendedmetadata.proto.PlainListAssoc
 */
export const PlainListAssoc = new PlainListAssoc$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AssocHeader$Type extends MessageType {
    constructor() {
        super("com.spotify.extendedmetadata.proto.AssocHeader", []);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.spotify.extendedmetadata.proto.AssocHeader
 */
export const AssocHeader = new AssocHeader$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Assoc$Type extends MessageType {
    constructor() {
        super("com.spotify.extendedmetadata.proto.Assoc", [
            { no: 1, name: "header", kind: "message", T: () => AssocHeader },
            { no: 2, name: "plain_list", kind: "message", T: () => PlainListAssoc }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* com.spotify.extendedmetadata.proto.AssocHeader header */ 1:
                    message.header = AssocHeader.internalBinaryRead(reader, reader.uint32(), options, message.header);
                    break;
                case /* com.spotify.extendedmetadata.proto.PlainListAssoc plain_list */ 2:
                    message.plainList = PlainListAssoc.internalBinaryRead(reader, reader.uint32(), options, message.plainList);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* com.spotify.extendedmetadata.proto.AssocHeader header = 1; */
        if (message.header)
            AssocHeader.internalBinaryWrite(message.header, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* com.spotify.extendedmetadata.proto.PlainListAssoc plain_list = 2; */
        if (message.plainList)
            PlainListAssoc.internalBinaryWrite(message.plainList, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.spotify.extendedmetadata.proto.Assoc
 */
export const Assoc = new Assoc$Type();
