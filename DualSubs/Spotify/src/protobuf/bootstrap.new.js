// @generated by protobuf-ts 2.9.4 with parameter generate_dependencies,long_type_number,output_javascript
// @generated from protobuf file "bootstrap.new.proto" (syntax proto3)
// tslint:disable
// @generated by protobuf-ts 2.9.4 with parameter generate_dependencies,long_type_number,output_javascript
// @generated from protobuf file "bootstrap.new.proto" (syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
// @generated message type with reflection information, may provide speed optimized methods
class BootstrapResponse$Type extends MessageType {
    constructor() {
        super("BootstrapResponse", [
            { no: 2, name: "ucsResponseV0", kind: "message", T: () => UcsResponseWrapperV0 },
            { no: 3, name: "trialsFacadeResponseV1", kind: "message", T: () => TrialsFacadeResponseWrapperV1 }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message BootstrapResponse
 */
export const BootstrapResponse = new BootstrapResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UcsResponseWrapperV0$Type extends MessageType {
    constructor() {
        super("UcsResponseWrapperV0", [
            { no: 1, name: "success", kind: "message", T: () => UcsResponseWrapperSuccess },
            { no: 2, name: "error", kind: "message", T: () => Error }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message UcsResponseWrapperV0
 */
export const UcsResponseWrapperV0 = new UcsResponseWrapperV0$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UcsResponseWrapperSuccess$Type extends MessageType {
    constructor() {
        super("UcsResponseWrapperSuccess", [
            { no: 1, name: "customization", kind: "message", T: () => UcsResponseWrapper }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message UcsResponseWrapperSuccess
 */
export const UcsResponseWrapperSuccess = new UcsResponseWrapperSuccess$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UcsResponseWrapper$Type extends MessageType {
    constructor() {
        super("UcsResponseWrapper", [
            { no: 1, name: "success", kind: "message", T: () => UcsResponse },
            { no: 2, name: "error", kind: "message", T: () => Error }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message UcsResponseWrapper
 */
export const UcsResponseWrapper = new UcsResponseWrapper$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TrialsFacadeResponseWrapperV1$Type extends MessageType {
    constructor() {
        super("TrialsFacadeResponseWrapperV1", [
            { no: 1, name: "success", kind: "message", T: () => TrialsFacadeResponseWrapperSuccess },
            { no: 2, name: "error", kind: "message", T: () => Error }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message TrialsFacadeResponseWrapperV1
 */
export const TrialsFacadeResponseWrapperV1 = new TrialsFacadeResponseWrapperV1$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TrialsFacadeResponseWrapperSuccess$Type extends MessageType {
    constructor() {
        super("TrialsFacadeResponseWrapperSuccess", [
            { no: 1, name: "filed1", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message TrialsFacadeResponseWrapperSuccess
 */
export const TrialsFacadeResponseWrapperSuccess = new TrialsFacadeResponseWrapperSuccess$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UcsResponse$Type extends MessageType {
    constructor() {
        super("UcsResponse", [
            { no: 1, name: "resolveSuccess", kind: "message", T: () => ResolveResponse },
            { no: 2, name: "resolveError", kind: "message", T: () => Error },
            { no: 3, name: "accountAttributesSuccess", kind: "message", T: () => AccountAttributesResponse },
            { no: 4, name: "accountAttributesError", kind: "message", T: () => Error },
            { no: 5, name: "fetchTimeMillis", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message UcsResponse
 */
export const UcsResponse = new UcsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResolveResponse$Type extends MessageType {
    constructor() {
        super("ResolveResponse", [
            { no: 1, name: "configuration", kind: "message", T: () => Configuration }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message ResolveResponse
 */
export const ResolveResponse = new ResolveResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Configuration$Type extends MessageType {
    constructor() {
        super("Configuration", [
            { no: 1, name: "configurationAssignmentId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "fetchTimeMillis", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "assignedValues", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => AssignedValue }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message Configuration
 */
export const Configuration = new Configuration$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AssignedValue$Type extends MessageType {
    constructor() {
        super("AssignedValue", [
            { no: 1, name: "propertyId", kind: "message", T: () => PropertyId },
            { no: 2, name: "metadata", kind: "message", T: () => Metadata },
            { no: 3, name: "boolValue", kind: "message", T: () => BoolValue },
            { no: 4, name: "intValue", kind: "message", T: () => IntValue },
            { no: 5, name: "enumValue", kind: "message", T: () => EnumValue }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message AssignedValue
 */
export const AssignedValue = new AssignedValue$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PropertyId$Type extends MessageType {
    constructor() {
        super("PropertyId", [
            { no: 1, name: "scope", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message PropertyId
 */
export const PropertyId = new PropertyId$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Metadata$Type extends MessageType {
    constructor() {
        super("Metadata", [
            { no: 1, name: "policyId", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 2, name: "externalRealm", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "externalRealmId", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message Metadata
 */
export const Metadata = new Metadata$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BoolValue$Type extends MessageType {
    constructor() {
        super("BoolValue", [
            { no: 1, name: "value", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message BoolValue
 */
export const BoolValue = new BoolValue$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EnumValue$Type extends MessageType {
    constructor() {
        super("EnumValue", [
            { no: 1, name: "value", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message EnumValue
 */
export const EnumValue = new EnumValue$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IntValue$Type extends MessageType {
    constructor() {
        super("IntValue", [
            { no: 1, name: "value", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message IntValue
 */
export const IntValue = new IntValue$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountAttributesResponse$Type extends MessageType {
    constructor() {
        super("AccountAttributesResponse", [
            { no: 1, name: "accountAttributes", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "message", T: () => AccountAttribute } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message AccountAttributesResponse
 */
export const AccountAttributesResponse = new AccountAttributesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccountAttribute$Type extends MessageType {
    constructor() {
        super("AccountAttribute", [
            { no: 2, name: "boolValue", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "longValue", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 4, name: "stringValue", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message AccountAttribute
 */
export const AccountAttribute = new AccountAttribute$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Error$Type extends MessageType {
    constructor() {
        super("Error", [
            { no: 1, name: "errorCode", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "message", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "logId", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message Error
 */
export const Error = new Error$Type();
